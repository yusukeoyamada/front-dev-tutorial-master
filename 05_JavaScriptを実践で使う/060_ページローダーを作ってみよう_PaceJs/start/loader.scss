// Loading Barのスタイル
  // https://codebyzach.github.io/pace/
    // 「Loading Bar」部分から、「loading-bar.css」をダウンロード。「theme.css」と中身は同じ。
  // 以下、「theme.css」の中身をコピーして、不要な部分を削除した

// 以下追加style
@use "mixin" as *;

$cSubTitle: #535353;
$cWineRed: #904669;

// ロードしている状態は、bodyに「pace-running」がつく。終わると、代わりに「pace-done」がつく
.pace-done #global-container {
  transition: opacity 1s;
  opacity: 1;
  // visibility: visible; // transitionの対象にはならないので、opacityの代わりに使っても良い。
}

// ロードしている状態は、bodyに「pace-running」がつく。終わると、代わりに「pace-done」がつく
// .pace-running #global-container {
//   // ただ、この状態だと、上記「#global-container」の「transition: opacity 1s」により、画像の残像が残る。
//   opacity: 0; // 画像が透明になる
// }

#global-container {
  // 以下、「pace-running」に付与されたstyleのコメント参照
  // transition: opacity 1s;

  opacity: 0; // 画像が透明になる
  // visibility: hidden; // transitionの対象にはならないので、opacityの代わりに使っても良い。
}

.pace {
  // 以下削除対象style
  // -webkit-pointer-events: none;
  // pointer-events: none;

  // -webkit-user-select: none;
  // -moz-user-select: none;
  // user-select: none;

  // -webkit-box-sizing: border-box;
  // -moz-box-sizing: border-box;
  // -ms-box-sizing: border-box;
  // -o-box-sizing: border-box;
  // box-sizing: border-box;

  // -webkit-border-radius: 10px;
  // -moz-border-radius: 10px;
  // border-radius: 10px;

  // -webkit-background-clip: padding-box;
  // -moz-background-clip: padding;
  // background-clip: padding-box;

  // 以下追加style
  // 以下、「position: absolute」 or 「position: fixed」の場合
  // top, left, right, bottomを「0」にして
  // 「margin: auto」にすると、上下左右中央揃えになる
  z-index: 2000;
  position: fixed;
  margin: auto;
  top: 0px;
  // top: 12px;
  left: 0;
  right: 0;
  bottom: 0;

  width: 100px;
  height: 100px;
  // width: 200px;
  // height: 50px;

  // overflow: hidden; // 当該要素からはみ出た部分は非表示に
}

.pace .pace-progress {
  // 以下追加style
  transform: none !important;
  text-align: center;

  // 以下削除対象style
  // -webkit-box-sizing: border-box;
  // -moz-box-sizing: border-box;
  // -ms-box-sizing: border-box;
  // -o-box-sizing: border-box;
  // box-sizing: border-box;

  // -webkit-border-radius: 2px;
  // -moz-border-radius: 2px;
  // border-radius: 2px;

  // -webkit-background-clip: padding-box;
  // -moz-background-clip: padding;
  // background-clip: padding-box;

  // -webkit-transform: translate3d(0, 0, 0);
  // transform: translate3d(0, 0, 0);

  // display: block;
  // position: absolute;
  // right: 100%;
  // margin-right: -7px;
  // width: 93%;
  // top: 7px;
  // height: 14px;
  // font-size: 12px;
  // background: #29d;
  // color: #29d;
  // line-height: 60px;
  // font-weight: bold;
  // font-family: Helvetica, Arial, "Lucida Grande", sans-serif;

  // -webkit-box-shadow: 120px 0 #fff, 240px 0 #fff;
  // -ms-box-shadow: 120px 0 #fff, 240px 0 #fff;
  // box-shadow: 120px 0 #fff, 240px 0 #fff;
}

.pace .pace-progress:after {
  // 「data-progress-text = "100%"」等の値を入れておくと、
  content: attr(data-progress-text);
  // 以下修正style
  display: block;
  font-weight: 100;
  font-size: 2em;
  // 左から順にインストールされているかどうかを見つけて、適用する(デバイスごとにインストールされているものが異なる為)。
  font-family: 'Helvetica Neue', 'Yu Gothic', 'Meiryo', sans-serif;
  color: $cSubTitle;

  // margin: 0 auto; // ブロック要素の中央揃えなら、こっちだと思ったがここではインライン要素になっているみたい??

  // 以下削除style
  // display: inline-block;
  // position: fixed;
  // width: 45px;
  // text-align: right;
  // right: 0;
  // padding-right: 16px;
  // top: 4px;
}

// 以下削除style
// .pace .pace-activity {
//   position: absolute;
//   width: 100%;
//   height: 28px;
//   z-index: 2001;
//   box-shadow: inset 0 0 0 2px #29d, inset 0 0 0 7px #FFF;
//   border-radius: 10px;
// }

.pace.pace-inactive {
  display: none;
}

// 以下、元は「.answer.spinner」だった。「pace-progress-inner」は使われず、余っていた。
  // 参照: 03_HTMLとCSSを極める_アニメーション編/060_演習_色んなローダーを作ってみよう/answer.scss
.pace-progress-inner {
  width: 40px;
  height: 40px;
  background-color: $cWineRed;
  // background-color: #333;

  margin: 0 auto; // 横方向の中央揃えに
  // margin: 100px auto;
  @include animation(
    $name: sk-rotateplane,
    $duration: 1.2s,
    $iteration-count: infinite,
    $timing-function: ease-in-out
  );
}

@keyframes sk-rotateplane {
  0% {
    transform: perspective(120px) rotateX(0deg) rotateY(0deg);
  }
  50% {
    transform: perspective(120px) rotateX(-180deg) rotateY(0deg);
  }
  100% {
    transform: perspective(120px) rotateX(-180deg) rotateY(-180deg);
  }
}
