$cBlack: black;

body {
  text-align: center;
}

// 関数のように定義できる
@mixin animation(
  $name,
  $duration: 1s, // デフォルト値を指定できる
  $timing-function: ease,
  $delay: 0s,
  $iteration-count: 1,
  $direction: normal,
  $fill-mode: forwards, // ここはデフォルト値はnormalが普通。あえてしている。
) {
  // animation-name: $name;
  // animation-duration: $duration;
  // 下記のように省略できる
  animation: {
    name: $name;
    duration: $duration;
    timing-function: $timing-function;
    delay: $delay;
    iteration-count: $iteration-count;
    direction: $direction;
    fill-mode: $fill-mode;
  }
}

.rect {
  display: inline-block;
  width: 100px;
  height: 100px;
  background-color: $cBlack;
  // @include animation(sk-bouncedelay) // 左記のように記載しても良いが、下記のように記載した方が親切。
  @include animation(
    $name: sk-bouncedelay
  );

  // animation: sk-bouncedelay 1.4s;
  // animation-timing-function: ease;
  // animation-delay: 3s;
  // animation-iteration-count: infinite;
  // animation-direction: alternate-reverse;
  // animation-fill-mode: both;
}

.paused {
  animation-play-state: paused;
}

@keyframes sk-bouncedelay {
  from {
    transform: scale(0);
    background-color: black;
  }

  to {
    transform: scale(1);
    background-color: green;
  }
}
