// (2) 以下がレスポンシブな書き方の内の1つ
// @import url("mobile.css") screen and (max-width: 600px);
// @import url("desktop.css") screen and (min-width: 601px); // Dart Sassの記法ではなく、cssの記法(urlを書くことに注意)

// 以下情報を上記のように記載
// href="mobile.css"
// media="screen and (max-width: 600px)"
// href="desktop.css"
// media="screen and (min-width: 601px)"

// (3) 以下がレスポンシブな書き方の内の1つであり、最も一般的な書き方
// mediaクエリと呼ばれる。
// @media screen and (max-width: 600px) {
//   h1 {
//     color: red;
//   }
// }
// @media screen and (min-width: 601px) {
//   h1 {
//     color: blue;
//   }
// }

// 以下の方が、わかりやすい。
// デスクトップ用のstyle
h1 {
  color: blue;
  background-color: yellow;
}

// モバイル用のstyle
@media screen and (max-width: 600px) {
  h1 {
    // 変更点のみを記載する記法を、デスクトップ・モバイルファーストと言う。
    // 基本的には、モバイルファーストの方を使うようにしてほしい。
    // max-widthか、min-widthかで、デスクトップか、モバイルかを変更できる。
    // min-widthで指定して、モバイルファーストにした方が良い。
    color: red;
    // background-color: yellow;
  }
}

// sassの場合、以下のように、まとめることも可能。
// 以下は、デスクトップファーストの一例
h1 {
  color: blue;
  background-color: yellow;

  @media screen and (max-width: 600px) {
    color: red;
  }
}

// 印刷時に使うstyleに
// @media print and (max-width: 600px) {
//   h1 {
//     color: red;
//   }
// }

// allだと、画面表示と、印刷時、どちらも(「all and」部分を削除しても同じ意味に)
// 以下が、「all and」で、複数指定の場合
// -webkit-min-device-pixel-ratioは、chromeなどでRetinaディスプレイの解像度を指定する際に使う
// min-resolutionは、FirefoxなどでRetinaディスプレイの解像度を指定する際に使う
// @media (-webkit-min-device-pixel-ratio: 2), (min-resolution: 2dppx) {
//   h1 {
//     color: red;
//   }
// }
